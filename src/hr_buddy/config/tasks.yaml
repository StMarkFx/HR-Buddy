web_scraping_task:
  description: "Scrape data from a specific website."
  expected_output: "A structured dataset extracted from the target website."
  agent: web_scraper
  tools:
    - web_scraper_tool # Name of the tool as defined in agents.yaml

job_posting_analysis_task:
  description: "Extract job title, description, requirements, and other relevant information from the provided job posting URL using the web scraper tool.  Ensure the output is a structured dictionary containing key-value pairs for easy access by subsequent agents."
  expected_output: "A dictionary containing extracted job posting data (title, description, requirements, company, location, etc.).  Handle missing data gracefully, returning placeholders where necessary."
  agent: researcher
  context:
    - job_url: "{job_url}" #This variable will be passed from the main application

social_media_profile_task:
  description: "Gather information from the specified social media profiles (LinkedIn, GitHub, etc.) using the social media scraper tool.  Structure the data in a consistent format for easy integration with the resume generation process.  Handle cases where a profile is unavailable or incomplete."
  expected_output: "A dictionary containing structured data from social media profiles, including work experience, skills, education, and other relevant information.  Use placeholders for missing data."
  agent: social_media_profiler
  context:
    - social_media_links: "{social_media_links}" #This variable will be passed from the main application

resume_processing_task:
  description: "Parse the uploaded resume using the resume parser tool.  Extract key information such as work experience, skills, education, and contact details.  The output should be a structured format suitable for integration with the resume strategist agent."
  expected_output: "A structured representation of the resume data (e.g., a dictionary or list of dictionaries) containing extracted information.  Handle various resume formats and potential inconsistencies in data."
  agent: resume_parser
  context:
    - resume_text: "{resume_text}" #This variable will be passed from the main application

resume_generation_task:
  description: "Generate a tailored resume based on the job posting data, social media profile data, and parsed resume data.  Use the LLM to craft compelling and concise descriptions of work experience and skills.  The final resume should be optimized for the target job posting and ATS compatibility."
  expected_output: "A well-formatted resume text optimized for the target job posting.  The text should be clear, concise, and ATS-friendly.  Ensure the resume highlights the candidate's most relevant skills and experience."
  agent: resume_strategist
  context:
    - job_data: "{job_data}" #Output from job_posting_analysis_task
    - social_profile: "{social_profile}" #Output from social_media_profile_task
    - resume_data: "{resume_data}" #Output from resume_processing_task

interview_preparation_task:
  description: "Generate a list of targeted interview questions based on the job description and the candidate's resume.  The questions should be relevant, insightful, and help assess the candidate's suitability for the role.  Use the LLM to generate high-quality questions."
  expected_output: "A list of well-crafted interview questions tailored to the specific job and candidate profile.  The questions should be diverse, covering various aspects of the role and the candidate's experience."
  agent: interview_preparer
  context:
    - job_data: "{job_data}" #Output from job_posting_analysis_task
    - resume_data: "{resume_data}" #Output from resume_processing_task

resume_pdf_generation_task:
  description: "Convert the generated resume text into a PDF document using the ReportLab library.  Ensure the PDF is well-formatted and easy to read."
  expected_output: "A PDF file containing the generated resume."
  agent: resume_pdf_generator #This will require a new agent to be added to agents.yaml

interview_questions_pdf_generation_task:
  description: "Convert the generated interview questions into a PDF document using the ReportLab library.  Ensure the PDF is well-formatted and easy to read."
  expected_output: "A PDF file containing the generated interview questions."
  agent: interview_questions_pdf_generator #This will require a new agent to be added to agents.yaml